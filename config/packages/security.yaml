security:
    encoders:
        App\Entity\Users:
            algorithm: bcrypt

    providers:
        app_user_provider:
            entity:
                class: App\Entity\Users
                property: username
    firewalls:
        register:
            pattern: ^/api/register
            stateless: true
            anonymous: true
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
    access_control:
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS }

        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/users, roles: ROLE_ADMIN}
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api/superadmin, roles: ROLE_SUPER_ADMIN }
